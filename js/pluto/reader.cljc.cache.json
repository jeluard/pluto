["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",["~$read"]],"~:name","~$pluto.reader","~:imports",null,"~:requires",["^ ","~$set","~$clojure.set","~$clojure.spec.alpha","~$cljs.spec.alpha","~$pluto.reader.errors","^>","~$cljs.tools.reader.edn","^?","~$pluto.reader.views","^@","~$errors","^>","~$clojure.tools.reader.edn","^?","^;","^;","~$hooks","~$pluto.reader.hooks","^D","^D","~$pluto.utils","^E","~$spec","^=","~$utils","^E","^=","^=","~$edn","^?"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$reader-error",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/julien/Documents/Projects/pluto/src/pluto/reader.cljc","~:line",21,"~:column",7,"~:end-line",21,"~:end-column",19,"~:arglists",["~#list",["~$quote",["^U",[["~$ex"]]]]]],"^6","~$pluto.reader/reader-error","~:variadic",false,"^O","/home/julien/Documents/Projects/pluto/src/pluto/reader.cljc","^S",19,"~:method-params",["^U",[["^W"]]],"~:protocol-impl",null,"~:arglists-meta",["^U",[null,null]],"^Q",1,"^P",21,"^R",21,"~:max-fixed-arity",1,"~:fn-var",true,"^T",["^U",["^V",["^U",[["^W"]]]]]],"^5",["^ ","^M",null,"^N",["^ ","^O","/home/julien/Documents/Projects/pluto/src/pluto/reader.cljc","^P",27,"^Q",16,"^R",27,"^S",20,"~:export",true,"^T",["^U",["^V",["^U",[["~$s"]]]]],"~:doc","Reads an extension definition as an EDN string.\n\n   No semantic validation is performed at this stage.\n\n   Returns a map defining:\n   * :data the extension definition as a map\n   * :errors a vector of errors map triggered during read"],"^6","~$pluto.reader/read","^Y",false,"^O","/home/julien/Documents/Projects/pluto/src/pluto/reader.cljc","^S",20,"^Z",["^U",[["~$s"]]],"^[",null,"^13",true,"^10",["^U",[null,null]],"^Q",1,"^P",27,"^R",27,"^11",1,"^12",true,"^T",["^U",["^V",["^U",[["~$s"]]]]],"^14","Reads an extension definition as an EDN string.\n\n   No semantic validation is performed at this stage.\n\n   Returns a map defining:\n   * :data the extension definition as a map\n   * :errors a vector of errors map triggered during read"],"~$mandatory-keys",["^ ","^6","~$pluto.reader/mandatory-keys","^O","/home/julien/Documents/Projects/pluto/src/pluto/reader.cljc","^P",43,"^Q",1,"^R",43,"^S",20,"^N",["^ ","^O","/home/julien/Documents/Projects/pluto/src/pluto/reader.cljc","^P",43,"^Q",6,"^R",43,"^S",20],"~:tag","~$cljs.core/ISet"],"~$valid-keys",["^ ","^6","~$pluto.reader/valid-keys","^O","/home/julien/Documents/Projects/pluto/src/pluto/reader.cljc","^P",44,"^Q",1,"^R",44,"^S",16,"^N",["^ ","^O","/home/julien/Documents/Projects/pluto/src/pluto/reader.cljc","^P",44,"^Q",6,"^R",44,"^S",16],"^18","^19"],"~$capacity?",["^ ","^M",null,"^N",["^ ","^O","/home/julien/Documents/Projects/pluto/src/pluto/reader.cljc","^P",46,"^Q",7,"^R",46,"^S",16,"^T",["^U",["^V",["^U",[["~$m","~$s"]]]]]],"^6","~$pluto.reader/capacity?","^Y",false,"^O","/home/julien/Documents/Projects/pluto/src/pluto/reader.cljc","^S",16,"^Z",["^U",[["~$m","~$s"]]],"^[",null,"^10",["^U",[null,null]],"^Q",1,"^P",46,"^R",46,"^11",2,"^12",true,"^T",["^U",["^V",["^U",[["~$m","~$s"]]]]]],"~$valid-element?",["^ ","^6","~$pluto.reader/valid-element?","^O","/home/julien/Documents/Projects/pluto/src/pluto/reader.cljc","^P",50,"^Q",1,"^R",50,"^S",25,"^N",["^ ","^O","/home/julien/Documents/Projects/pluto/src/pluto/reader.cljc","^P",50,"^Q",11,"^R",50,"^S",25],"^18","~$cljs.core/MultiFn"],"~$validate",["^ ","^M",null,"^N",["^ ","^O","/home/julien/Documents/Projects/pluto/src/pluto/reader.cljc","^P",73,"^Q",7,"^R",73,"^S",15,"^T",["^U",["^V",["^U",[[["^ ","~:keys",["~$capacities"]],"~$m"]]]]]],"^6","~$pluto.reader/validate","^Y",false,"^O","/home/julien/Documents/Projects/pluto/src/pluto/reader.cljc","^S",15,"^Z",["^U",[["~$p__2223","~$m"]]],"^[",null,"^10",["^U",[null,null]],"^Q",1,"^P",73,"^R",73,"^11",2,"^12",true,"^T",["^U",["^V",["^U",[[["^ ","^1B",["^1C"]],"~$m"]]]]]],"~$parse-meta",["^ ","^M",null,"^N",["^ ","^O","/home/julien/Documents/Projects/pluto/src/pluto/reader.cljc","^P",80,"^Q",7,"^R",80,"^S",17,"^T",["^U",["^V",["^U",[["~$v"]]]]]],"^6","~$pluto.reader/parse-meta","^Y",false,"^O","/home/julien/Documents/Projects/pluto/src/pluto/reader.cljc","^S",17,"^Z",["^U",[["~$v"]]],"^[",null,"^10",["^U",[null,null]],"^Q",1,"^P",80,"^R",80,"^11",1,"^12",true,"^T",["^U",["^V",["^U",[["~$v"]]]]]],"~$parse",["^ ","^M",null,"^N",["^ ","^O","/home/julien/Documents/Projects/pluto/src/pluto/reader.cljc","^P",85,"^Q",16,"^R",85,"^S",21,"^13",true,"^T",["^U",["^V",["^U",[["~$ctx","~$m"]]]]],"^14","Parse an extension definition map as encapsulated in :data key of the map returned by read.\n   `ctx` is a map defining:\n   * `capacities` a map of valid supported capacities (hooks, queries, events)\n\n   Returns a map defining:\n   * :data a map of meta and parsed hooks\n   * :permissions a vector of required permissions\n   * :errors a vector of errors maps triggered during parse"],"^6","~$pluto.reader/parse","^Y",false,"^O","/home/julien/Documents/Projects/pluto/src/pluto/reader.cljc","^S",21,"^Z",["^U",[["^1I","~$m"]]],"^[",null,"^13",true,"^10",["^U",[null,null]],"^Q",1,"^P",85,"^R",85,"^11",2,"^12",true,"^T",["^U",["^V",["^U",[["^1I","~$m"]]]]],"^14","Parse an extension definition map as encapsulated in :data key of the map returned by read.\n   `ctx` is a map defining:\n   * `capacities` a map of valid supported capacities (hooks, queries, events)\n\n   Returns a map defining:\n   * :data a map of meta and parsed hooks\n   * :permissions a vector of required permissions\n   * :errors a vector of errors maps triggered during parse"]],"~:cljs.spec/registry-ref",[["~:pluto.reader/meta",["^U",["~$cljs.spec.alpha/keys","~:req-un",["~:pluto.reader/name","~:pluto.reader/description","~:pluto.reader/documentation"]]]],["~:pluto.reader/hooks","~$cljs.core/map?"]],"~:require-macros",["^ ","^F","^=","^=","^=","^<","^="],"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:description","^1N","~:opt-un","~:ex-kind","^1L","~:errors","~:gfn","~:pred-exprs","~:keys-pred","~:cause","^1Q","~:opt-keys","~:default","^1R","^6","~:events","~:hooks","~:pluto.reader.errors/missing-keys","~:req-specs","~$meta","^1O","~$cljs.core/contains?","^1S","~:pluto.reader.errors/reader-error","~:pluto.reader.errors/invalid-meta","~$%","~:documentation","^1M","~:req","~:pluto.reader.errors/invalid-value","~:capacities","~:req-keys","~$cljs.core/fn","~:opt-specs","~:pluto.reader.errors/invalid-key","~:pred-forms","~:pluto.reader.errors/message","~:hierarchy","~:queries","^1P","~:opt","~:data"]],"~:order",["^2;","^1Y","^2F","^22","^1Z","^2J","^29","^2G","^24","^1L","^1M","^1N","^1O","^1P","^1Q","^1X","^1[","^20","^21","^23","^28","^2>","^2A","^2C","^2E","^2I","^6","^1W","^2=","^2B","~$%","^1S","^2:","^1R","^26","^2?","^2D","^2H","^25","^2@","^27","^2<"]],"^14","Read time: string to data structure, only tags are replaced by records\n   Parse time: validate all the things, produce hiccup than can be used as is\n   # Read\n   # Parse\n     * properties/children are defined as symbol only, can be defined in element having fn semantic (view, event, ..), are unified at parse time\n     * conditionals are defined as list with symbol as first element. Replaced at parse time by references to corresponding reagent component\n     * let (lexical scoping). No shadowing support (error). Resolve in local scope then delegate to :outer (chain collected from parents)\n     * permissions required are accumulated at parse time\n   # Activate\n    * based on hooks, inject views / trigger events"]