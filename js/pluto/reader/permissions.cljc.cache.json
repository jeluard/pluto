["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$RegExp",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$pluto.reader.permissions","~:imports",null,"~:requires",null,"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$matches?",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/julien/Documents/Projects/pluto/src/pluto/reader/permissions.cljc","~:line",3,"~:column",8,"~:end-line",3,"~:end-column",16,"~:private",true,"~:arglists",["~#list",["~$quote",["^H",[["~$path","~$path-template"]]]]],"~:doc","Takes path into datastructure and path-template and determines if path-template\n  matches the path.\n  Path is matched if it's subpath of the path-template, eq path `[:a :b :c :d]`\n  matches the path-template `[:a :b :c]` but path `[:a :b]` does not.\n  Path-template can contain regular expression instead of exact values so the level\n  matching is not identity only.\n  When matching regular expression against path fragment, keyword path fragments\n  are converted to appropriate strings."],"^F",true,"^7","~$pluto.reader.permissions/matches?","^A","/home/julien/Documents/Projects/pluto/src/pluto/reader/permissions.cljc","^E",16,"~:method-params",["^H",[["^J","^K"]]],"~:protocol-impl",null,"~:arglists-meta",["^H",[null,null]],"^C",1,"~:variadic?",false,"^B",3,"~:ret-tag","~$boolean","^D",3,"~:max-fixed-arity",2,"~:fn-var",true,"^G",["^H",["^I",["^H",[["^J","^K"]]]]],"^L","Takes path into datastructure and path-template and determines if path-template\n  matches the path.\n  Path is matched if it's subpath of the path-template, eq path `[:a :b :c :d]`\n  matches the path-template `[:a :b :c]` but path `[:a :b]` does not.\n  Path-template can contain regular expression instead of exact values so the level\n  matching is not identity only.\n  When matching regular expression against path fragment, keyword path fragments\n  are converted to appropriate strings."],"~$allowed-path?",["^ ","^?",null,"^@",["^ ","^A","/home/julien/Documents/Projects/pluto/src/pluto/reader/permissions.cljc","^B",27,"^C",7,"^D",27,"^E",20,"^G",["^H",["^I",["^H",[["^J",["^ ","~:keys",["~$include-paths","~$exclude-paths"]]]]]]],"^L","Takes path vector and checks if it conforms to permissions map.\n  Permission is expected to include at least `:include-paths` key, containing\n  set of all allowed paths.\n  Optionally, set of forbidden paths under key `:exclude-paths` can be provided\n  as well.\n  Paths in set can be vector of exact keys or can include regular expression\n  patterns as well.\n  If given path (first argument) is matched by any of the include paths and none\n  of the exclude paths, the function returns true, false/nil otherwise."],"^7","~$pluto.reader.permissions/allowed-path?","^A","/home/julien/Documents/Projects/pluto/src/pluto/reader/permissions.cljc","^E",20,"^N",["^H",[["^J","~$p__6398"]]],"^O",null,"^P",["^H",[null,null]],"^C",1,"^Q",false,"^B",27,"^R",["^6",["^S","~$any","~$clj-nil"]],"^D",27,"^T",2,"^U",true,"^G",["^H",["^I",["^H",[["^J",["^ ","^W",["^X","^Y"]]]]]]],"^L","Takes path vector and checks if it conforms to permissions map.\n  Permission is expected to include at least `:include-paths` key, containing\n  set of all allowed paths.\n  Optionally, set of forbidden paths under key `:exclude-paths` can be provided\n  as well.\n  Paths in set can be vector of exact keys or can include regular expression\n  patterns as well.\n  If given path (first argument) is matched by any of the include paths and none\n  of the exclude paths, the function returns true, false/nil otherwise."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:include-paths","~:exclude-paths"]],"~:order",["^16","^17"]],"^L",null]