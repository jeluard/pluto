["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",["~$resolve"]],"~:name","~$pluto.reader.reference","~:imports",null,"~:requires",["^ ","~$errors","~$pluto.reader.errors","^;","^;"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$reference?",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/julien/Documents/Projects/pluto/src/pluto/reader/reference.cljc","~:line",10,"~:column",7,"~:end-line",10,"~:end-column",17,"~:arglists",["~#list",["~$quote",["^H",[["~$ref"]]]]],"~:doc","Return true if argument is a reference"],"^6","~$pluto.reader.reference/reference?","^B","/home/julien/Documents/Projects/pluto/src/pluto/reader/reference.cljc","^F",17,"~:method-params",["^H",[["^J"]]],"~:protocol-impl",null,"~:arglists-meta",["^H",[null,null]],"^D",1,"~:variadic?",false,"^C",10,"~:ret-tag",["^4",["~$boolean","~$clj-nil"]],"^E",10,"~:max-fixed-arity",1,"~:fn-var",true,"^G",["^H",["^I",["^H",[["^J"]]]]],"^K","Return true if argument is a reference"],"~$reference->symbol",["^ ","^@",null,"^A",["^ ","^B","/home/julien/Documents/Projects/pluto/src/pluto/reader/reference.cljc","^C",19,"^D",7,"^E",19,"^F",24,"^G",["^H",["^I",["^H",[["~$o"]]]]],"^K","Return the symbol pointed by the reference\n\n   ```clojure\n   (= 'some.ref (reference->symbol ['some.ref]))\n   ```"],"^6","~$pluto.reader.reference/reference->symbol","^B","/home/julien/Documents/Projects/pluto/src/pluto/reader/reference.cljc","^F",24,"^M",["^H",[["~$o"]]],"^N",null,"^O",["^H",[null,null]],"^D",1,"^P",false,"^C",19,"^Q",["^4",["~$any","^S"]],"^E",19,"^T",1,"^U",true,"^G",["^H",["^I",["^H",[["~$o"]]]]],"^K","Return the symbol pointed by the reference\n\n   ```clojure\n   (= 'some.ref (reference->symbol ['some.ref]))\n   ```"],"~$type->ns",["^ ","^A",["^ ","^B","/home/julien/Documents/Projects/pluto/src/pluto/reader/reference.cljc","^C",29,"^D",14,"^E",29,"^F",22,"~:const",true],"^6","~$pluto.reader.reference/type->ns","^B","/home/julien/Documents/Projects/pluto/src/pluto/reader/reference.cljc","^F",22,"~:const-expr",["^ ","~:op","~:map","~:env",["^ ","~:context","~:expr"],"~:form",["^ ","~:view","views","~:query","queries","~:event","events"],"~:keys",[["^ ","^11","^Z","~:val","^17","^13",["^ ","^14","^15"],"^16","^17","~:tag","~$cljs.core/Keyword"],["^ ","^11","^Z","^1;","^18","^13",["^ ","^14","^15"],"^16","^18","^1<","^1="],["^ ","^11","^Z","^1;","^19","^13",["^ ","^14","^15"],"^16","^19","^1<","^1="]],"~:vals",[["^ ","^11","^Z","^1;","views","^13",["^ ","^14","^15"],"^16","views","^1<","~$string"],["^ ","^11","^Z","^1;","queries","^13",["^ ","^14","^15"],"^16","queries","^1<","^1?"],["^ ","^11","^Z","^1;","events","^13",["^ ","^14","^15"],"^16","events","^1<","^1?"]],"~:children",["^1:","^1>"],"^1<","~$cljs.core/IMap"],"^D",1,"^Z",true,"^C",29,"^E",29,"^1<","^1A"],"~$type->capacity",["^ ","^A",["^ ","^B","/home/julien/Documents/Projects/pluto/src/pluto/reader/reference.cljc","^C",30,"^D",14,"^E",30,"^F",28,"^Z",true],"^6","~$pluto.reader.reference/type->capacity","^B","/home/julien/Documents/Projects/pluto/src/pluto/reader/reference.cljc","^F",28,"^10",["^ ","^11","^12","^13",["^ ","^14","^15"],"^16",["^ ","^17","~:components","^18","~:queries","^19","~:events"],"^1:",[["^ ","^11","^Z","^1;","^17","^13",["^ ","^14","^15"],"^16","^17","^1<","^1="],["^ ","^11","^Z","^1;","^18","^13",["^ ","^14","^15"],"^16","^18","^1<","^1="],["^ ","^11","^Z","^1;","^19","^13",["^ ","^14","^15"],"^16","^19","^1<","^1="]],"^1>",[["^ ","^11","^Z","^1;","^1D","^13",["^ ","^14","^15"],"^16","^1D","^1<","^1="],["^ ","^11","^Z","^1;","^1E","^13",["^ ","^14","^15"],"^16","^1E","^1<","^1="],["^ ","^11","^Z","^1;","^1F","^13",["^ ","^14","^15"],"^16","^1F","^1<","^1="]],"^1@",["^1:","^1>"],"^1<","^1A"],"^D",1,"^Z",true,"^C",30,"^E",30,"^1<","^1A"],"~$resolve-symbol",["^ ","^@",null,"^A",["^ ","^B","/home/julien/Documents/Projects/pluto/src/pluto/reader/reference.cljc","^C",32,"^D",8,"^E",32,"^F",22,"~:private",true,"^G",["^H",["^I",["^H",[["~$ctx","~$ext","~$type","~$ns","~$s"]]]]],"^K","Resolve a symbol first via the extension definition then via the host ctx."],"^1H",true,"^6","~$pluto.reader.reference/resolve-symbol","^B","/home/julien/Documents/Projects/pluto/src/pluto/reader/reference.cljc","^F",22,"^M",["^H",[["^1I","^1J","^1K","^1L","~$s"]]],"^N",null,"^O",["^H",[null,null]],"^D",1,"^P",false,"^C",32,"^Q",["^4",[null,"^X"]],"^E",32,"^T",5,"^U",true,"^G",["^H",["^I",["^H",[["^1I","^1J","^1K","^1L","~$s"]]]]],"^K","Resolve a symbol first via the extension definition then via the host ctx."],"^5",["^ ","^@",null,"^A",["^ ","^B","/home/julien/Documents/Projects/pluto/src/pluto/reader/reference.cljc","^C",38,"^D",7,"^E",38,"^F",14,"^G",["^H",["^I",["^H",[["^1I","^1J","^1K","^J"]]]]],"^K","Resolve a reference to a primitive.\n\n   ```clojure\n   (= {:data \"view\"} (resolve {} {'views/id \"view\"} :view ['id]))\n   ```"],"^6","~$pluto.reader.reference/resolve","^B","/home/julien/Documents/Projects/pluto/src/pluto/reader/reference.cljc","^F",14,"^M",["^H",[["^1I","^1J","^1K","^J"]]],"^N",null,"^O",["^H",[null,null]],"^D",1,"^P",false,"^C",38,"^Q","^1A","^E",38,"^T",4,"^U",true,"^G",["^H",["^I",["^H",[["^1I","^1J","^1K","^J"]]]]],"^K","Resolve a reference to a primitive.\n\n   ```clojure\n   (= {:data \"view\"} (resolve {} {'views/id \"view\"} :view ['id]))\n   ```"]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:errors","~:pluto.reader.errors/invalid-reference","^1F","~:value","~:pluto.reader.errors/unknown-reference-type","~:type","^19","^1D","~:capacities","^18","^1E","~:pluto.reader.errors/unknown-reference","^17","~:data"]],"~:order",["^17","^18","^19","^1D","^1E","^1F","^1X","^1Z","^1S","^1Y","^1U","^1W","^1V","^1T"]],"^K","Utils functions helping with primitive references.\n\n   A reference is a vector whose first element is a symbol and optional second element is a map.\n\n   e.g. [view] or [ethereum/log {:address \"\"}]"]